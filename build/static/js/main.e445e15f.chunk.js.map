{"version":3,"sources":["assets/img/Logo original RGB.jpg","components/About.jsx","components/Header.jsx","components/common/Calendar/_calendar.js","store/reducer.js","components/common/ModalWindow/ModalWindow.jsx","components/common/Calendar/Calendar.jsx","store/actions.js","components/Home.jsx","components/App.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","About","className","Header","useState","menu","setMenu","src","logo","alt","onClick","exact","activeClassName","to","DAYS_IN_MONTH","WEEK_DAYS_FROM_MONDAY","Month","areEqual","a","b","getFullYear","getMonth","getDate","getMonthData","year","month","result","date","Date","daysInMonth","isLeapYear","getDaysInMonth","monthStartsOn","dayOfWeek","getDay","getDayOfWeek","day","i","j","undefined","initialState","weekDay","ModalWindow","setModalShow","props","useSelector","state","Modal","size","aria-labelledby","centered","Body","htmlFor","id","type","value","readOnly","defaultData","years","monthNames","weekDayNames","Calendar","setDate","currentDate","selectedDate","setSelecterdDate","modalShow","dispatch","useDispatch","monthData","calendar","map","week","index","key","classnames","today","selected","payload","setCalendarData","handleDayClick","name","show","Home","App","path","render","store","createStore","action","window","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e445e15f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo original RGB.c1b22935.jpg\";","import React from \"react\";\nimport \"../styles/About.scss\";\n\nconst About = () => {\n  return (\n    <div className=\"about container\">\n      <div className=\"row\">\n        <div className=\"col-10 offset-1 align-self-center\">\n          <h1 className=\"about_title\">Lorem ipsum creation timelines</h1>\n          <div>\n            <p>\n              So how did the classical Latin become so incoherent? According to\n              McClintock, a 15th century typesetter likely scrambled part of\n              Cicero's De Finibus in order to provide placeholder text to mockup\n              various fonts for a type specimen book.\n            </p>\n            <p>\n              It's difficult to find examples of lorem ipsum in use before\n              Letraset made it popular as a dummy text in the 1960s, although\n              McClintock says he remembers coming across the lorem ipsum passage\n              in a book of old metal type samples. So far he hasn't relocated\n              where he once saw the passage, but the popularity of Cicero in the\n              15th century supports the theory that the filler text has been\n              used for centuries.\n            </p>\n            <p>\n              And anyways, as Cecil Adams reasoned, “[Do you really] think\n              graphic arts supply houses were hiring classics scholars in the\n              1960s?” Perhaps. But it seems reasonable to imagine that there was\n              a version in use far before the age of Letraset.\n            </p>\n            <p>\n              McClintock wrote to Before & After to explain his discovery; “What\n              I find remarkable is that this text has been the industry's\n              standard dummy text ever since some printer in the 1500s took a\n              galley of type and scrambled it to make a type specimen book; it\n              has survived not only four centuries of letter-by-letter resetting\n              but even the leap into electronic typesetting, essentially\n              unchanged except for an occasional 'ing' or 'y' thrown in. It's\n              ironic that when the then-understood Latin was scrambled, it\n              became as incomprehensible as Greek; the phrase 'it's Greek to me'\n              and 'greeking' have common semantic roots!” (The editors published\n              his letter in a correction headlined “Lorem Oopsum”).\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState } from \"react\";\nimport { NavLink, Route } from \"react-router-dom\";\nimport logo from \"../assets/img/Logo original RGB.jpg\";\nimport \"../styles/Header.scss\";\n\nconst Header = () => {\n  const [menu, setMenu] = useState(false);\n  return (\n    <header className=\"container header\">\n      <div className=\"row align-items-center\">\n        <div className=\"mr-auto\">\n          <img src={logo} alt=\"\" className=\"logo\" />\n        </div>\n        <nav className={`align-items-end nav ${menu && `nav-active`}`}>\n          <Route>\n            <NavLink\n              onClick={() => setMenu(false)}\n              exact\n              className=\"link-item\"\n              activeClassName=\"link-active\"\n              to=\"/\">\n              Home\n            </NavLink>\n            <NavLink\n              onClick={() => setMenu(false)}\n              className=\"link-item\"\n              activeClassName=\"link-active\"\n              to=\"/about\">\n              About us\n            </NavLink>\n          </Route>\n        </nav>\n        <div className=\"click-area\" onClick={() => setMenu(!menu)}>\n          <div className={`menu-button ${menu && `menu-button-active`}`}></div>\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","const DAYS_IN_WEEK = 7;\n\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nconst WEEK_DAYS_FROM_MONDAY = [0, 1, 2, 3, 4, 5, 6];\n\nconst Month = {\n  January: 0,\n  February: 1,\n  March: 2,\n  April: 3,\n  May: 4,\n  June: 5,\n  July: 6,\n  August: 7,\n  September: 8,\n  October: 9,\n  Novermber: 10,\n  December: 11,\n};\n\nexport function areEqual(a, b) {\n  if (!a || !b) return false;\n\n  return (\n    a.getFullYear() === b.getFullYear() &&\n    a.getMonth() === b.getMonth() &&\n    a.getDate() === b.getDate()\n  );\n}\n\nexport function isLeapYear(year) {\n  return !(year % 4 || (!(year % 100) && year % 400));\n}\n\nexport function getDaysInMonth(date) {\n  const month = date.getMonth();\n  const year = date.getFullYear();\n  const daysInMonth = DAYS_IN_MONTH[month];\n\n  if (isLeapYear(year) && month === Month.February) {\n    return daysInMonth + 1;\n  } else {\n    return daysInMonth;\n  }\n}\n\nexport function getDayOfWeek(date) {\n  const dayOfWeek = date.getDay();\n\n  return WEEK_DAYS_FROM_MONDAY[dayOfWeek];\n}\n\nexport function getMonthData(year, month) {\n  const result = [];\n  const date = new Date(year, month);\n  const daysInMonth = getDaysInMonth(date);\n  const monthStartsOn = getDayOfWeek(date);\n  let day = 1;\n\n  for (let i = 0; i < (daysInMonth + monthStartsOn) / DAYS_IN_WEEK; i++) {\n    result[i] = [];\n\n    for (let j = 0; j < DAYS_IN_WEEK; j++) {\n      if ((i === 0 && j < monthStartsOn) || day > daysInMonth) {\n        result[i][j] = undefined;\n      } else {\n        result[i][j] = new Date(year, month, day++);\n      }\n    }\n  }\n\n  return result;\n}\n","export const CALENDAR_DATA = \"CALENDAR_DATA\";\n\nlet initialState = {\n  month: \"\",\n  day: null,\n  weekDay: \"\",\n};\n\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CALENDAR_DATA:\n      return {\n        month: action.payload.month,\n        day: action.payload.day,\n        weekDay: action.payload.weekDay,\n      };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport \"./ModalWindow.scss\";\n\nexport const ModalWindow = ({ setModalShow, ...props }) => {\n  const month = useSelector((state) => state.month);\n  const day = useSelector((state) => state.day);\n  const weekDay = useSelector((state) => state.weekDay);\n  return (\n    <Modal\n      className=\"modal\"\n      {...props}\n      size=\"md\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered>\n      <Modal.Body>\n        <button className=\"modal_btn\" onClick={() => setModalShow(false)}>\n          {\"\"}\n        </button>\n        <div className=\"modal_container\">\n          <div className=\"modal_item\">\n            <label htmlFor=\"month\">Month</label>\n            <input id=\"month\" type=\"text\" value={month} readOnly />\n          </div>\n          <div className=\"modal_item\">\n            <label htmlFor=\"day\">Day</label>\n            <input\n              id=\"day\"\n              type=\"text\"\n              value={`${day}th ${weekDay}`}\n              readOnly\n            />\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n};\n","import React, { useState } from \"react\";\nimport * as calendar from \"./_calendar\";\nimport \"./Calendar.scss\";\nimport classnames from \"classnames\";\nimport { useDispatch } from \"react-redux\";\nimport { setCalendarData } from \"../../../store/actions\";\nimport { ModalWindow } from \"../ModalWindow/ModalWindow\";\n\nconst defaultData = {\n  date: new Date(),\n  years: [2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025],\n  monthNames: [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"Novermber\",\n    \"December\",\n  ],\n  weekDayNames: [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\",\n  ],\n};\nconst Calendar = () => {\n  const [date, setDate] = useState(defaultData.date);\n  const [currentDate] = useState(new Date());\n  const [selectedDate, setSelecterdDate] = useState(null);\n  const [modalShow, setModalShow] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const year = date.getFullYear();\n  const month = date.getMonth();\n\n  const handlePrevMonthButtonClick = () => {\n    const date = new Date(year, month - 1);\n    setDate(date);\n  };\n\n  const handleNextMonthButtonClick = () => {\n    const date = new Date(year, month + 1);\n    setDate(date);\n  };\n\n  const handleDayClick = (date) => {\n    setSelecterdDate(date);\n    dispatch(\n      setCalendarData(\n        monthNames[date.getMonth()],\n        date.getDate(),\n        weekDayNames[date.getDay()]\n      )\n    );\n    setModalShow(true);\n    return;\n  };\n\n  const { monthNames, weekDayNames } = defaultData;\n  const monthData = calendar.getMonthData(year, month);\n  return (\n    <div className=\"calendar\">\n      <div className=\"calendar_header\">\n        <button className=\"calendar_btn\" onClick={handlePrevMonthButtonClick}>\n          {\"\"}\n        </button>\n        <div>\n          {monthNames[month]} {year}\n        </div>\n        <button\n          className=\"calendar_btn calendar_btn-next\"\n          onClick={handleNextMonthButtonClick}>\n          {\"\"}\n        </button>\n      </div>\n      <table className=\"calendar_table\">\n        <tbody>\n          {monthData.map((week, index) => (\n            <tr key={index} className=\"week\">\n              {week.map((date, index) =>\n                date ? (\n                  <td\n                    key={index}\n                    className={classnames(\"day\", {\n                      today: calendar.areEqual(date, currentDate),\n                      selected: calendar.areEqual(date, selectedDate),\n                    })}\n                    onClick={() => handleDayClick(date)}>\n                    {date.getDate()}\n                  </td>\n                ) : (\n                  <td key={index} />\n                )\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div className=\"calendar_footer\">\n        {weekDayNames.map((name, index) => (\n          <div key={index}>{name[0]}</div>\n        ))}\n      </div>\n      <ModalWindow show={modalShow} setModalShow={setModalShow} />\n    </div>\n  );\n};\n\nexport default Calendar;\n","import { CALENDAR_DATA } from \"./reducer\";\n\nexport const setCalendarData = (month, day, weekDay) => ({\n  type: CALENDAR_DATA,\n  payload: { month, day, weekDay },\n});\n","import React from \"react\";\nimport Calendar from \"./common/Calendar/Calendar\";\nimport \"../styles/Home.scss\";\n\nconst Home = () => {\n  return (\n    <main className=\"container-fluid\">\n      <div className=\"row \">\n        <div className=\"col-xl-7 col-lg-6 col-12 content-wrapper \">\n          <div className=\"col-12 col-md-8 offset-0 offset-md-4 text-wrapper\">\n            <h1 className=\"title\"> Choose the day for the meeting</h1>\n            <p className=\"text\">\n              We encourage you to book your appointment online. This will save\n              you time.\n            </p>\n          </div>\n        </div>\n        <div className=\"calendar-wrapper col-xl-5 col-lg-6 col-12 \">\n          <Calendar />\n        </div>\n      </div>\n    </main>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport About from \"./About\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport \"../styles/App.scss\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route path=\"/about\" render={() => <About />} />\n        <Route path=\"/\" render={() => <Home />} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore } from \"redux\";\nimport { reducer } from \"./reducer\";\n\nlet store = createStore(reducer);\nexport default store;\n\nwindow.store = store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./styles/index.scss\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}